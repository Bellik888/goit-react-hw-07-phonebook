{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/actions.js","components/Filter/Filter.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","service/mockapi.js","redux/contacts/operations.js","components/ContactListItem/ContactListItem.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","filterContact","Filter","inputFilterID","shortid","dispatch","useDispatch","filter","useSelector","state","className","s","wrapper","htmlFor","id","name","type","value","onChange","e","target","getContacts","contacts","getFilter","ContactForm","inputNameID","inputNumberID","useState","setName","number","setNumber","section","onSubmit","preventDefault","contact","map","includes","alert","form","pattern","title","tittle","placeholder","button","ContactList","children","list","BASE_URL","a","axios","get","data","post","deleteContact","delete","getThunkContacts","createAsyncThunk","_","rejectWithValue","addThunkContact","deleteThunkContact","message","ContactListItem","useEffect","phone","item","onClick","toLowerCase","App","contactFilter","createReducer","payload","fulfilled","loading","pending","action","rejected","error","persistConfig","key","version","storage","blacklist","contactsList","combineReducers","contactsReducer","persistedContactReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd85987f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2THQn\",\"button\":\"ContactListItem_button__22wLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactForm_section__QTTHr\",\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contact/add');\nexport const deleteContact = createAction('contact/delete');\nexport const filterContact = createAction('filter/value');\n\n// // pending\n// export const addContactRequest = createAction('contact/add')\n// export const deleteContactRequest = createAction('contact/delete');\n// export const filterContactRequest = createAction('filter/value');\n// //resolved\n// export const addContactSuccess = createAction('contact/add')\n// export const deleteContactSuccess = createAction('contact/delete');\n// export const filterContactSuccess = createAction('filter/value');\n// //rejected\n// export const addContactError = createAction('contact/add')\n// export const deleteContactError = createAction('contact/delete');\n// export const filterContactError = createAction('filter/value');\n","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\n// ======redux=====\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/actions';\n\nexport const Filter = () => {\n  let inputFilterID = shortid();\n\n  // ======redux======\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  const handleChangeFilter = e => {\n    // setFilter(e.target.value);\n    dispatch(filterContact(e.target.value)); // в редакс\n  };\n\n  return (\n    <div className={s.wrapper}>\n      <label htmlFor={inputFilterID}>Find contacts by name</label>\n      <input\n        id={inputFilterID}\n        name={filter}\n        type=\"text\"\n        value={filter}\n        onChange={handleChangeFilter}\n      ></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  handleChangeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.filter;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\n//==========redux========\nimport { addContact } from '../../redux/contacts/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  let inputNameID = shortid();\n  let inputNumberID = shortid();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n  const handleChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  const searchDuplicate = value => {\n    const names = contacts.map(contact => contact.name);\n    names.includes(value.name)\n      ? alert(`${value.name} is already in contacts!!!`)\n      : dispatch(addContact(value));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let contact = {\n      id: shortid(),\n      name: name,\n      number: number,\n    };\n\n    if (name && number) {\n      setName(contact.name);\n      setNumber(contact.number);\n      searchDuplicate(contact);\n      setName('');\n      setNumber('');\n    }\n    return;\n  };\n  // console.log(onAdd)\n\n  return (\n    <section className={s.section}>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label htmlFor={inputNameID}>Names</label>\n        <input\n          id={inputNameID}\n          name={name}\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Ім'я включає букви, при потребі : апостроф, тире і пробіли\"\n          value={name}\n          onChange={handleChangeName}\n        ></input>\n\n        <label htmlFor={inputNumberID}>Number</label>\n        <input\n          id={inputNumberID}\n          name={number}\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          tittle=\"обов'язково цифри! при потребі '+' , '-', '()'\"\n          value={number}\n          placeholder=\"XXX-XX-XX\"\n          onChange={handleChangeNumber}\n        ></input>\n\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </section>\n  );\n};\n\nContactForm.propTypes = {\n  searchDuplicate: PropTypes.func,\n};\n\nexport default ContactForm;\n\n// const mapStateToProps = state => {\n//   return {\n//     contacts: state.contacts,\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onAdd:contact=>dispatch(addContact(contact))\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\n","import s from './ContactList.module.css';\n\nexport const ContactList = ({ children }) => {\n  return (\n    { children } && (\n      <section>\n        <ul className={s.list}>{children}</ul>\n      </section>\n    )\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://619a1c149022ea0017a7b036.mockapi.io/api/v1/';\n\nexport const getContacts = async () => {\n  let { data } = await axios.get(`${BASE_URL}Contacts`);\n  return data;\n};\n\nexport const addContact = async contact => {\n  let { data } = await axios.post(`${BASE_URL}Contacts`, contact);\n  return data;\n};\n\nexport const deleteContact = async id => {\n  await axios.delete(`${BASE_URL}Contacts/${id}`);\n  return id;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getContacts, addContact, deleteContact } from '../../service/mockapi';\n\nexport const getThunkContacts = createAsyncThunk(\n  'getContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await getContacts();\n      return contacts;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const addThunkContact = createAsyncThunk(\n  'addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      return await addContact(contact);\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const deleteThunkContact = createAsyncThunk(\n  'deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await deleteContact(id);\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, getContacts } from '../../redux/contacts/selectors';\nimport {\n  getThunkContacts,\n  deleteThunkContact,\n} from '../../redux/contacts/operations';\n\nconst ContactListItem = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getThunkContacts()), [dispatch]);\n\n  return (\n    <>\n      {filter === ''\n        ? contacts.map(({ name, phone, id }) => (\n            <li key={id} className={s.item}>\n              <p>\n                {name} : {phone}\n              </p>\n              <button\n                type=\"button\"\n                className={s.button}\n                onClick={() => dispatch(deleteThunkContact(id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))\n        : contacts.map(\n            ({ name, phone, id }) =>\n              name.toLowerCase().includes(filter.toLowerCase()) && (\n                <li key={id} className={s.item}>\n                  <p>\n                    {name} : {phone}\n                  </p>\n                  <button\n                    type=\"button\"\n                    className={s.button}\n                    onClick={() => dispatch(deleteThunkContact(id))}\n                  >\n                    Delete\n                  </button>\n                </li>\n              ),\n          )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.array,\n  deleteItem: PropTypes.func,\n};\n\nexport default ContactListItem;\n","// import { useState} from 'react';\nimport './App.css';\nimport { Filter } from './components/Filter/Filter';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport ContactListItem from './components/ContactListItem/ContactListItem';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList>\n        <ContactListItem />\n      </ContactList>\n    </div>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { filterContact } from './actions';\nimport {\n  getThunkContacts,\n  addThunkContact,\n  deleteThunkContact,\n} from './operations';\n\n// const initState = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\n// export const contactsList = createReducer(initState, {\n//   [addContact]: (state, { payload }) => [...state, payload],\n//   [deleteContact]: (state, { payload }) =>\n//     state.filter(contact => contact.id !== payload),\n// });\nexport const contactFilter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport const contacts = createReducer([], {\n  [getThunkContacts.fulfilled]: (_, { payload }) => [...payload],\n  [addThunkContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteThunkContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nexport const loading = createReducer(false, {\n  [getThunkContacts.pending]: (_, action) => true,\n  [getThunkContacts.fulfilled]: (_, action) => false,\n  [getThunkContacts.rejected]: (_, action) => false,\n  [addThunkContact.pending]: (_, action) => true,\n  [addThunkContact.fulfilled]: (_, action) => false,\n  [addThunkContact.rejected]: (_, action) => false,\n  [deleteThunkContact.pending]: (_, action) => true,\n  [deleteThunkContact.fulfilled]: (_, action) => false,\n  [deleteThunkContact.rejected]: (_, action) => false,\n});\n\nexport const error = createReducer(null, {\n  [getThunkContacts.fulfilled]: (_, action) => null,\n  [getThunkContacts.rejected]: (_, { payload }) => payload,\n  [addThunkContact.fulfilled]: (_, action) => null,\n  [addThunkContact.rejected]: (_, { payload }) => payload,\n  [deleteThunkContact.fulfilled]: (_, action) => null,\n  [deleteThunkContact.rejected]: (_, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { contacts, loading, error, contactFilter } from './contacts/reducers';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'contacts',\n  version: 1,\n  storage,\n  blacklist: ['filter'],\n};\nconst contactsList = combineReducers({\n  contacts,\n  loading,\n  error,\n});\n\nconst contactsReducer = combineReducers({\n  contacts: contactsList,\n  filter: contactFilter,\n});\n\nconst persistedContactReducer = persistReducer(persistConfig, contactsReducer);\n\nexport const store = configureStore({\n  reducer: persistedContactReducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}