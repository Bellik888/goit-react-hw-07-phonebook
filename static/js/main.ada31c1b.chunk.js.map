{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/actions.js","components/Filter/Filter.js","redux/contacts/selectors.js","service/mockapi.js","redux/contacts/operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/ContactListItem/ContactListItem.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js"],"names":["module","exports","filterContact","createAction","Filter","inputFilterID","shortid","dispatch","useDispatch","filter","useSelector","state","className","s","wrapper","htmlFor","id","name","type","value","onChange","e","target","getContacts","contacts","getFilter","BASE_URL","a","axios","get","data","console","log","addContact","contact","post","deleteContact","delete","getThunkContacts","createAsyncThunk","_","rejectWithValue","addThunkContact","deleteThunkContact","message","ContactForm","useState","setName","number","setNumber","inputNameID","inputNumberID","section","onSubmit","preventDefault","map","includes","alert","form","pattern","title","tittle","placeholder","button","ContactList","children","list","ContactListItem","useEffect","phone","item","onClick","then","toLowerCase","App","contactFilter","createReducer","payload","fulfilled","loading","pending","action","rejected","error","contactsList","combineReducers","contactsReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ada31c1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2THQn\",\"button\":\"ContactListItem_button__22wLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactForm_section__QTTHr\",\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","import { createAction } from '@reduxjs/toolkit';\n\n// export const addContact = createAction('contact/add');\n// export const deleteContact = createAction('contact/delete');\nexport const filterContact = createAction('filter/value');\n\n// // pending\n// export const addContactRequest = createAction('contact/add')\n// export const deleteContactRequest = createAction('contact/delete');\n// export const filterContactRequest = createAction('filter/value');\n// //resolved\n// export const addContactSuccess = createAction('contact/add')\n// export const deleteContactSuccess = createAction('contact/delete');\n// export const filterContactSuccess = createAction('filter/value');\n// //rejected\n// export const addContactError = createAction('contact/add')\n// export const deleteContactError = createAction('contact/delete');\n// export const filterContactError = createAction('filter/value');\n","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\n// ======redux=====\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/actions';\n\nexport const Filter = () => {\n  let inputFilterID = shortid();\n\n  // ======redux======\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  const handleChangeFilter = e => {\n    // setFilter(e.target.value);\n    dispatch(filterContact(e.target.value)); // в редакс\n  };\n\n  return (\n    <div className={s.wrapper}>\n      <label htmlFor={inputFilterID}>Find contacts by name</label>\n      <input\n        id={inputFilterID}\n        name={filter}\n        type=\"text\"\n        value={filter}\n        onChange={handleChangeFilter}\n      ></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  handleChangeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.filter;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://619a1c149022ea0017a7b036.mockapi.io/api/v1/';\n\nexport const getContacts = async () => {\n  let { data } = await axios.get(`${BASE_URL}Contacts`);\n  console.log('mockapi', data);\n  return data;\n};\n\nexport const addContact = async contact => {\n  let { data } = await axios.post(`${BASE_URL}Contacts`, contact);\n  return data;\n};\n\nexport const deleteContact = async id => {\n  await axios.delete(`${BASE_URL}Contacts/${id}`);\n  console.log('mockapi', id);\n  return id;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getContacts, addContact, deleteContact } from '../../service/mockapi';\n\nexport const getThunkContacts = createAsyncThunk(\n  'contacts/getContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await getContacts();\n      return contacts;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const addThunkContact = createAsyncThunk(\n  'contacts/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      return await addContact(contact);\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const deleteThunkContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      return await deleteContact(id);\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\n//==========redux========\n// import { addContact } from '../../redux/contacts/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { addThunkContact } from '../../redux/contacts/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  let inputNameID = shortid();\n  let inputNumberID = shortid();\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n  const handleChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  const searchDuplicate = value => {\n    const names = contacts.map(contact => contact.name);\n    names.includes(value.name)\n      ? alert(`${value.name} is already in contacts!!!`)\n      : // : dispatch(addContact(value));\n        dispatch(addThunkContact({ name, number }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let contact = {\n      id: shortid(),\n      name: name,\n      number: number,\n    };\n\n    if (name && number) {\n      setName(contact.name);\n      setNumber(contact.number);\n      searchDuplicate(contact);\n      setName('');\n      setNumber('');\n    }\n    return;\n  };\n  // console.log(onAdd)\n\n  return (\n    <section className={s.section}>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label htmlFor={inputNameID}>Names</label>\n        <input\n          id={inputNameID}\n          name={name}\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Ім'я включає букви, при потребі : апостроф, тире і пробіли\"\n          value={name}\n          onChange={handleChangeName}\n        ></input>\n\n        <label htmlFor={inputNumberID}>Number</label>\n        <input\n          id={inputNumberID}\n          name={number}\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          tittle=\"обов'язково цифри! при потребі '+' , '-', '()'\"\n          value={number}\n          placeholder=\"XXX-XX-XX\"\n          onChange={handleChangeNumber}\n        ></input>\n\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </section>\n  );\n};\n\nContactForm.propTypes = {\n  searchDuplicate: PropTypes.func,\n};\n\nexport default ContactForm;\n\n// const mapStateToProps = state => {\n//   return {\n//     contacts: state.contacts,\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onAdd:contact=>dispatch(addContact(contact))\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\n","import s from './ContactList.module.css';\n\nexport const ContactList = ({ children }) => {\n  return (\n    { children } && (\n      <section>\n        <ul className={s.list}>{children}</ul>\n      </section>\n    )\n  );\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, getContacts } from '../../redux/contacts/selectors';\nimport {\n  getThunkContacts,\n  deleteThunkContact,\n} from '../../redux/contacts/operations';\n\nconst ContactListItem = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getThunkContacts()), [dispatch]);\n\n  const contacts = useSelector(getContacts);\n  return (\n    <>\n      {filter === ''\n        ? contacts.map(({ name, phone, id }) => (\n            <li key={id} className={s.item}>\n              <p>\n                {name} : {phone}\n              </p>\n              <button\n                type=\"button\"\n                className={s.button}\n                onClick={() =>\n                  dispatch(deleteThunkContact(id)).then(() =>\n                    dispatch(getThunkContacts()),\n                  )\n                }\n              >\n                Delete\n              </button>\n            </li>\n          ))\n        : contacts.map(\n            ({ name, phone, id }) =>\n              name.toLowerCase().includes(filter.toLowerCase()) && (\n                <li key={id} className={s.item}>\n                  <p>\n                    {name} : {phone}\n                  </p>\n                  <button\n                    type=\"button\"\n                    className={s.button}\n                    onClick={() => dispatch(deleteThunkContact(id))}\n                  >\n                    Delete\n                  </button>\n                </li>\n              ),\n          )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.array,\n  deleteItem: PropTypes.func,\n};\n\nexport default ContactListItem;\n","// import { useState} from 'react';\nimport './App.css';\nimport { Filter } from './components/Filter/Filter';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport ContactListItem from './components/ContactListItem/ContactListItem';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList>\n        <ContactListItem />\n      </ContactList>\n    </div>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { filterContact } from './actions';\nimport {\n  getThunkContacts,\n  addThunkContact,\n  deleteThunkContact,\n} from './operations';\n\n// const initState = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\n// export const contactsList = createReducer(initState, {\n//   [addContact]: (state, { payload }) => [...state, payload],\n//   [deleteContact]: (state, { payload }) =>\n//     state.filter(contact => contact.id !== payload),\n// });\nexport const contactFilter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport const contacts = createReducer([], {\n  [getThunkContacts.fulfilled]: (_, { payload }) => payload,\n  [addThunkContact.fulfilled]: (state, { payload }) => [payload, ...state],\n  [deleteThunkContact]: (state, { payload }) =>\n    // state.contacts.filter(contact => contact.id !== payload),\n    state.filter(contact => console.log(contact)),\n});\n\nexport const loading = createReducer(false, {\n  [getThunkContacts.pending]: (_, action) => true,\n  [getThunkContacts.fulfilled]: (_, action) => false,\n  [getThunkContacts.rejected]: (_, action) => false,\n  [addThunkContact.pending]: (_, action) => true,\n  [addThunkContact.fulfilled]: (_, action) => false,\n  [addThunkContact.rejected]: (_, action) => false,\n  [deleteThunkContact.pending]: (_, action) => true,\n  [deleteThunkContact.fulfilled]: (_, action) => false,\n  [deleteThunkContact.rejected]: (_, action) => false,\n});\n\nexport const error = createReducer(null, {\n  [getThunkContacts.fulfilled]: (_, action) => null,\n  [getThunkContacts.rejected]: (_, { payload }) => payload,\n  [addThunkContact.fulfilled]: (_, action) => null,\n  [addThunkContact.rejected]: (_, { payload }) => payload,\n  [deleteThunkContact.fulfilled]: (_, action) => null,\n  [deleteThunkContact.rejected]: (_, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { contacts, loading, error, contactFilter } from './contacts/reducers';\n\n// import {\n//   // persistStore,\n//   // persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n\n// import storage from 'redux-persist/lib/storage';\n\n// const persistConfig = {\n//   key: 'contacts',\n//   version: 1,\n//   storage,\n//   blacklist: ['filter'],\n// };\nconst contactsList = combineReducers({\n  contacts,\n  loading,\n  error,\n});\n\nconst contactsReducer = combineReducers({\n  contacts: contactsList,\n  filter: contactFilter,\n});\n\n// const persistedContactReducer = persistReducer(persistConfig, contactsReducer);\n\nexport const store = configureStore({\n  reducer: contactsReducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n      // ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    }),\n});\n\n// export const persistor = persistStore();\n// export default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}