{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/actions.js","components/Filter/Filter.js","redux/contacts/selectors.js","service/mockapi.js","redux/contacts/operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Spinner/Spinner.js","components/ContactListItem/ContactListItem.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js"],"names":["module","exports","filterContact","createAction","Filter","inputFilterID","shortid","dispatch","useDispatch","filter","useSelector","state","className","s","wrapper","htmlFor","id","name","type","value","onChange","e","target","getContacts","contacts","getFilter","BASE_URL","a","axios","get","data","sort","b","localeCompare","addContact","contact","post","deleteContact","delete","getThunkContacts","createAsyncThunk","_","rejectWithValue","addThunkContact","deleteThunkContact","message","ContactForm","useState","setName","number","setNumber","inputNameID","inputNumberID","section","onSubmit","preventDefault","map","includes","alert","then","form","pattern","title","tittle","placeholder","button","ContactList","children","list","Spinner","color","height","width","ContactListItem","loading","useEffect","item","onClick","toLowerCase","App","contactFilter","createReducer","payload","fulfilled","pending","action","rejected","error","contactsList","combineReducers","contactsReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9dda1cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2THQn\",\"button\":\"ContactListItem_button__22wLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactForm_section__QTTHr\",\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","import { createAction } from '@reduxjs/toolkit';\n\n// export const addContact = createAction('contact/add');\n// export const deleteContact = createAction('contact/delete');\nexport const filterContact = createAction('filter/value');\n\n// // pending\n// export const addContactRequest = createAction('contact/add')\n// export const deleteContactRequest = createAction('contact/delete');\n// export const filterContactRequest = createAction('filter/value');\n// //resolved\n// export const addContactSuccess = createAction('contact/add')\n// export const deleteContactSuccess = createAction('contact/delete');\n// export const filterContactSuccess = createAction('filter/value');\n// //rejected\n// export const addContactError = createAction('contact/add')\n// export const deleteContactError = createAction('contact/delete');\n// export const filterContactError = createAction('filter/value');\n","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\n// ======redux=====\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/actions';\n\nexport const Filter = () => {\n  let inputFilterID = shortid();\n\n  // ======redux======\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  const handleChangeFilter = e => {\n    // setFilter(e.target.value);\n    dispatch(filterContact(e.target.value)); // в редакс\n  };\n\n  return (\n    <div className={s.wrapper}>\n      <label htmlFor={inputFilterID}>Find contacts by name</label>\n      <input\n        id={inputFilterID}\n        name={filter}\n        type=\"text\"\n        value={filter}\n        onChange={handleChangeFilter}\n      ></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  handleChangeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.filter;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://619a1c149022ea0017a7b036.mockapi.io/api/v1/';\n\nexport const getContacts = async () => {\n  let { data } = await axios.get(`${BASE_URL}Contacts`);\n  return data.sort((a, b) => a.name.localeCompare(b.name));\n};\n\nexport const addContact = async contact => {\n  let { data } = await axios.post(`${BASE_URL}Contacts`, contact);\n  return data;\n};\n\nexport const deleteContact = async id => {\n  await axios.delete(`${BASE_URL}Contacts/${id}`);\n  return id;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getContacts, addContact, deleteContact } from '../../service/mockapi';\n\nexport const getThunkContacts = createAsyncThunk(\n  'contacts/getContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await getContacts();\n      return contacts;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const addThunkContact = createAsyncThunk(\n  'contacts/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      return await addContact(contact);\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const deleteThunkContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      return await deleteContact(id);\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\n//==========redux========\n// import { addContact } from '../../redux/contacts/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport {\n  addThunkContact,\n  getThunkContacts,\n} from '../../redux/contacts/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  let inputNameID = shortid();\n  let inputNumberID = shortid();\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n  const handleChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  const searchDuplicate = value => {\n    const names = contacts.map(contact => contact.name);\n    names.includes(value.name)\n      ? alert(`${value.name} is already in contacts!!!`)\n      : // : dispatch(addContact(value));\n        dispatch(addThunkContact({ name, number })).then(() =>\n          dispatch(getThunkContacts()),\n        );\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let contact = {\n      id: shortid(),\n      name: name,\n      number: number,\n    };\n\n    if (name && number) {\n      setName(contact.name);\n      setNumber(contact.number);\n      searchDuplicate(contact);\n      setName('');\n      setNumber('');\n    }\n    return;\n  };\n  return (\n    <section className={s.section}>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label htmlFor={inputNameID}>Names</label>\n        <input\n          id={inputNameID}\n          name={name}\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Ім'я включає букви, при потребі : апостроф, тире і пробіли\"\n          value={name}\n          onChange={handleChangeName}\n        ></input>\n\n        <label htmlFor={inputNumberID}>Number</label>\n        <input\n          id={inputNumberID}\n          name={number}\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          tittle=\"обов'язково цифри! при потребі '+' , '-', '()'\"\n          value={number}\n          placeholder=\"XXX-XX-XX\"\n          onChange={handleChangeNumber}\n        ></input>\n\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </section>\n  );\n};\n\nContactForm.propTypes = {\n  searchDuplicate: PropTypes.func,\n};\n\nexport default ContactForm;\n","import s from './ContactList.module.css';\n\nexport const ContactList = ({ children }) => {\n  return (\n    { children } && (\n      <section>\n        <ul className={s.list}>{children}</ul>\n      </section>\n    )\n  );\n};\n","import Loader from 'react-loader-spinner';\n\nexport const Spinner = () => {\n  return <Loader type=\"ThreeDots\" color=\"green\" height={60} width={60} />;\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, getContacts } from '../../redux/contacts/selectors';\nimport {\n  getThunkContacts,\n  deleteThunkContact,\n} from '../../redux/contacts/operations';\nimport { Spinner } from '../Spinner/Spinner';\n\nconst ContactListItem = () => {\n  const filter = useSelector(getFilter);\n  const state = useSelector(state => state.contacts.loading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getThunkContacts()), [dispatch]);\n\n  const contacts = useSelector(getContacts);\n  return (\n    <>\n      {state && <Spinner />}\n      {filter === ''\n        ? contacts &&\n          contacts\n            // .sort((a, b) => a.name.localeCompare(b.name))\n            .map(({ name, number, id }) => (\n              <li key={id} className={s.item}>\n                <p>\n                  {name} : {number}\n                </p>\n                <button\n                  type=\"button\"\n                  className={s.button}\n                  onClick={() =>\n                    dispatch(deleteThunkContact(id)).then(() =>\n                      dispatch(getThunkContacts()),\n                    )\n                  }\n                >\n                  Delete\n                </button>\n              </li>\n            ))\n        : contacts.map(\n            ({ name, number, id }) =>\n              name.toLowerCase().includes(filter.toLowerCase()) && (\n                <li key={id} className={s.item}>\n                  <p>\n                    {name} : {number}\n                  </p>\n                  <button\n                    type=\"button\"\n                    className={s.button}\n                    onClick={() => dispatch(deleteThunkContact(id))}\n                  >\n                    Delete\n                  </button>\n                </li>\n              ),\n          )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.array,\n  deleteItem: PropTypes.func,\n};\n\nexport default ContactListItem;\n","// import { useState} from 'react';\nimport './App.css';\nimport { Filter } from './components/Filter/Filter';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport ContactListItem from './components/ContactListItem/ContactListItem';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList>\n        <ContactListItem />\n      </ContactList>\n    </div>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { filterContact } from './actions';\nimport {\n  getThunkContacts,\n  addThunkContact,\n  deleteThunkContact,\n} from './operations';\n\n// const initState = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\n// export const contactsList = createReducer(initState, {\n//   [addContact]: (state, { payload }) => [...state, payload],\n//   [deleteContact]: (state, { payload }) =>\n//     state.filter(contact => contact.id !== payload),\n// });\nexport const contactFilter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport const contacts = createReducer([], {\n  [getThunkContacts.fulfilled]: (_, { payload }) => payload,\n  [addThunkContact.fulfilled]: (state, { payload }) => [payload, ...state],\n  [deleteThunkContact]: (state, { payload }) =>\n    state.contacts.filter(contact => contact.id !== payload),\n});\n\nexport const loading = createReducer(false, {\n  [getThunkContacts.pending]: (_, action) => true,\n  [getThunkContacts.fulfilled]: (_, action) => false,\n  [getThunkContacts.rejected]: (_, action) => false,\n  [addThunkContact.pending]: (_, action) => true,\n  [addThunkContact.fulfilled]: (_, action) => false,\n  [addThunkContact.rejected]: (_, action) => false,\n  [deleteThunkContact.pending]: (_, action) => true,\n  [deleteThunkContact.fulfilled]: (_, action) => false,\n  [deleteThunkContact.rejected]: (_, action) => false,\n});\n\nexport const error = createReducer(null, {\n  [getThunkContacts.fulfilled]: (_, action) => null,\n  [getThunkContacts.rejected]: (_, { payload }) => payload,\n  [addThunkContact.fulfilled]: (_, action) => null,\n  [addThunkContact.rejected]: (_, { payload }) => payload,\n  [deleteThunkContact.fulfilled]: (_, action) => null,\n  [deleteThunkContact.rejected]: (_, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { contacts, loading, error, contactFilter } from './contacts/reducers';\n\n// import {\n//   // persistStore,\n//   // persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n\n// import storage from 'redux-persist/lib/storage';\n\n// const persistConfig = {\n//   key: 'contacts',\n//   version: 1,\n//   storage,\n//   blacklist: ['filter'],\n// };\nconst contactsList = combineReducers({\n  contacts,\n  loading,\n  error,\n});\n\nconst contactsReducer = combineReducers({\n  contacts: contactsList,\n  filter: contactFilter,\n});\n\n// const persistedContactReducer = persistReducer(persistConfig, contactsReducer);\n\nexport const store = configureStore({\n  reducer: contactsReducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n      // ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    }),\n});\n\n// export const persistor = persistStore();\n// export default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}